import{r as g,j as H}from"./vendor-BGAm2JFI.js";var h=(e=>(e.Doctor="Doctor",e.Nurse="Nurse",e.PhysicalTherapist="Physical Therapist",e.SocialWorker="Social Worker",e.Driver="Driver",e))(h||{});const J=e=>{if(!e)return{level:"gray",label:"No Data"};const t=new Date(e),r=Math.abs(new Date().getTime()-t.getTime()),i=Math.ceil(r/(1e3*60*60*24))/7;return i>=8?{level:"red",label:"8+ weeks"}:i>=6?{level:"yellow",label:"6-8 weeks"}:{level:"green",label:"< 6 weeks"}},Y={red:"bg-red-100 text-red-800 border-red-300",yellow:"bg-yellow-100 text-yellow-800 border-yellow-300",green:"bg-green-100 text-green-800 border-green-300",gray:"bg-gray-100 text-gray-800 border-gray-300"};let j=null;async function W(){try{const e=await fetch("/homecare_db_bundle_ar.v3.json");if(e.ok){const t=await e.json(),s=(t.المرضى||[]).map(o=>({...o,tags:o.tags||[],assessments:o.assessments||[],contactAttempts:o.contactAttempts||[]})),r=t.طاقم||[],n=t.الأحياء||[],i={catheter:s.filter(o=>o.hasCatheter),pressureSore:s.filter(o=>o.wounds?.presentCount&&o.wounds.presentCount>0),tubeFeeding:s.filter(o=>o.ngTube||o.gTube),fallRisk:s.filter(o=>o.fallHighRisk),ivTherapy:s.filter(o=>o.ivTherapy),ventilation:s.filter(o=>o.ventSupport)};return{patients:s,staff:r,areas:n,criticalCases:i}}}catch(e){console.warn("Failed to load data from JSON file:",e)}return{patients:[],staff:[],areas:[],criticalCases:{catheter:[],pressureSore:[],tubeFeeding:[],fallRisk:[],ivTherapy:[],ventilation:[]}}}const _=e=>{if(!e)return{patients:[],staff:[],areas:[],criticalCases:{catheter:[],pressureSore:[],tubeFeeding:[],fallRisk:[],ivTherapy:[],ventilation:[]},filters:{search:"",areas:[],tags:[],sex:[],risk:[]},selectedPatientIds:new Set,currentRole:h.Doctor,visits:[],teams:[],customLists:[]};const t=e.staff.filter(r=>r.المهنة==="طبيب"),s=e.staff.filter(r=>r.المهنة==="ممرض");return{...e,filters:{search:"",areas:[],tags:[],sex:[],risk:[]},selectedPatientIds:new Set,currentRole:h.Doctor,visits:[],teams:[{id:"team1",name:"Team 1",members:[t[0],s[0],s[1]].filter(Boolean)},{id:"team2",name:"Team 2",members:[t[1],s[2],s[3]].filter(Boolean)},{id:"team3",name:"Team 3",members:[t[2],s[4],s[5]].filter(Boolean)}].filter(r=>r.members.length>0),customLists:[]}},U=(e,t)=>{switch(t.type){case"SET_SEARCH":return{...e,filters:{...e.filters,search:t.payload}};case"TOGGLE_AREA_FILTER":const s=e.filters.areas.includes(t.payload)?e.filters.areas.filter(a=>a!==t.payload):[...e.filters.areas,t.payload];return{...e,filters:{...e.filters,areas:s}};case"TOGGLE_TAG_FILTER":const r=e.filters.tags.includes(t.payload)?e.filters.tags.filter(a=>a!==t.payload):[...e.filters.tags,t.payload];return{...e,filters:{...e.filters,tags:r}};case"TOGGLE_SEX_FILTER":const n=e.filters.sex.includes(t.payload)?e.filters.sex.filter(a=>a!==t.payload):[...e.filters.sex,t.payload];return{...e,filters:{...e.filters,sex:n}};case"TOGGLE_RISK_FILTER":const i=e.filters.risk.includes(t.payload)?e.filters.risk.filter(a=>a!==t.payload):[...e.filters.risk,t.payload];return{...e,filters:{...e.filters,risk:i}};case"CLEAR_FILTERS":return{...e,filters:{search:"",areas:[],tags:[],sex:[],risk:[]}};case"TOGGLE_PATIENT_SELECTION":const o=new Set(e.selectedPatientIds);return o.has(t.payload)?o.delete(t.payload):o.add(t.payload),{...e,selectedPatientIds:o};case"CLEAR_SELECTIONS":return{...e,selectedPatientIds:new Set};case"SELECT_ALL_FILTERED":return{...e,selectedPatientIds:new Set(t.payload)};case"SET_ROLE":return{...e,currentRole:t.payload};case"ASSIGN_TO_VISITS":{const a=t.payload.patientIds.map(f=>({patientId:f,date:t.payload.date,teamId:t.payload.teamId,status:"Scheduled"})),l=new Set(e.visits.map(f=>`${f.patientId}-${f.date}`)),d=a.filter(f=>!l.has(`${f.patientId}-${f.date}`));return{...e,visits:[...e.visits,...d],selectedPatientIds:new Set}}case"SAVE_VISIT_NOTE":{const{visitId:a,role:l,note:d,user:f}=t.payload,[T,I]=a.split("_");return{...e,visits:e.visits.map(y=>{if(y.patientId===T&&y.date===I){const S={...y};l===h.Doctor?(S.doctorNote=d,S.doctorSign=f):l===h.Nurse?(S.nurseNote=d,S.nurseSign=f):l===h.PhysicalTherapist?(S.ptNote=d,S.ptSign=f):l===h.SocialWorker&&(S.swNote=d,S.swSign=f);const D=!!S.doctorNote,u=!!S.nurseNote;let c="Scheduled";return D&&u?c="Completed":D?c="DoctorCompleted":u&&(c="NurseCompleted"),S.status=c,S}return y})}}case"SAVE_ASSESSMENT":{const{patientId:a,assessment:l}=t.payload;return{...e,patients:e.patients.map(d=>{if(d.nationalId===a){const f=[l,...d.assessments||[]];let T=d.bradenScore;return l.role===h.Nurse&&"bradenScore"in l&&l.bradenScore&&(T=parseInt(String(l.bradenScore),10)),{...d,assessments:f,bradenScore:T||d.bradenScore,tags:d.tags||[],contactAttempts:d.contactAttempts||[]}}return d})}}case"LOG_CONTACT_ATTEMPT":return{...e,patients:e.patients.map(a=>a.nationalId===t.payload.patientId?{...a,contactAttempts:[t.payload.contactAttempt,...a.contactAttempts||[]]}:a)};case"CANCEL_VISIT":return{...e,visits:e.visits.filter(a=>!(a.patientId===t.payload.patientId&&a.date===t.payload.date))};case"IMPORT_STATE":return t.payload&&t.payload.patients&&t.payload.filters?{..._(null),...t.payload,selectedPatientIds:new Set(t.payload.selectedPatientIds||[])}:e;case"CREATE_CUSTOM_LIST":{if(e.selectedPatientIds.size===0||!t.payload.name)return e;const a={id:Date.now().toString(),name:t.payload.name,patientIds:Array.from(e.selectedPatientIds)};return{...e,customLists:[...e.customLists,a]}}case"DELETE_CUSTOM_LIST":return{...e,customLists:e.customLists.filter(a=>a.id!==t.payload.id)};case"APPLY_CUSTOM_LIST":{const a=e.customLists.find(l=>l.id===t.payload.id);return a?{...e,selectedPatientIds:new Set(a.patientIds)}:e}default:return e}},L=g.createContext(void 0),X=({children:e})=>{const[t,s]=g.useState(!1),[r,n]=g.useState(!0),[i,o]=g.useState(null),[a,l]=g.useReducer(U,_(null)),d=g.useCallback(u=>{l({type:"TOGGLE_PATIENT_SELECTION",payload:u})},[]),f=g.useCallback(()=>{l({type:"CLEAR_SELECTIONS"})},[]),T=g.useCallback(u=>{Object.entries(u).forEach(([c,p])=>{switch(c){case"search":l({type:"SET_SEARCH",payload:p});break}})},[]),I=g.useCallback(u=>{l({type:"SET_ROLE",payload:u})},[]),y=g.useCallback((u,c)=>{l({type:"LOG_CONTACT_ATTEMPT",payload:{patientId:u,contactAttempt:c}})},[]),S=g.useMemo(()=>({selectPatient:d,clearSelections:f,updateFilters:T,setRole:I,logContactAttempt:y}),[d,f,T,I,y]);g.useEffect(()=>{t||(async()=>{try{n(!0),o(null),console.log("🔄 Starting to load patient data...");const c=await W();if(!c||!c.patients||!Array.isArray(c.patients))throw new Error("Invalid data structure received");console.log("✅ Patient data loaded:",{patientsCount:c.patients.length,staffCount:c.staff.length,areasCount:c.areas.length}),j=c;const p=_(c);l({type:"IMPORT_STATE",payload:p}),s(!0),n(!1),console.log("✅ HomeHealthcare context initialized successfully")}catch(c){console.error("❌ Failed to load patient data:",c),o(c instanceof Error?c.message:"Unknown error occurred");const p=_(null);l({type:"IMPORT_STATE",payload:p}),s(!0),n(!1),console.warn("⚠️ Using empty state as fallback")}})()},[t]);const D=g.useMemo(()=>{const{patients:u,filters:c}=a;if(!u||!Array.isArray(u))return console.warn("Patients array is undefined or not an array:",u),[];const{search:p,areas:N,tags:w,sex:b,risk:O}=c,C=p.toLowerCase();return u.filter(E=>{if(E.status==="deceased")return!1;const k=J(E.admissionDate).level,R=E.nameAr.toLowerCase().includes(C),P=E.nationalId.includes(p),V=p===""||R||P,x=N.length===0||E.areaId&&N.includes(E.areaId),F=w.length===0||w.every(G=>E.tags?.includes(G)),M=b.length===0||E.sex&&b.includes(E.sex),$=O.length===0||O.includes(k);return V&&x&&F&&M&&$})},[a.patients,a.filters]);return H.jsx(L.Provider,{value:{state:a,dispatch:l,filteredPatients:D,actions:S,loading:r,error:i},children:e})},q=()=>{const e=g.useContext(L);if(e===void 0)throw new Error("useHomeHealthcare must be used within a HomeHealthcareProvider");return e},m={DRAFT_ASSESSMENTS:"mhhc_draft_assessments",DRAFT_VISIT_NOTES:"mhhc_draft_visit_notes",AUTO_SAVE_ENABLED:"mhhc_auto_save_enabled"};class A{constructor(){this.autoSaveEnabled=!0,this.autoSaveInterval=3e4,this.autoSaveEnabled=this.getAutoSaveEnabled()}static getInstance(){return A.instance||(A.instance=new A),A.instance}saveDraftAssessment(t,s,r,n=!1){try{const i=this.getDraftAssessments(),o=`${t}_${s}`,a={id:o,patientId:t,role:s,formData:r,lastSaved:new Date,isComplete:n,timestamp:Date.now()};i[o]=a,localStorage.setItem(m.DRAFT_ASSESSMENTS,JSON.stringify(i)),console.log(`💾 Saved draft assessment for ${t} - ${s}`,{isComplete:n})}catch(i){console.error("Error saving draft assessment:",i)}}getDraftAssessment(t,s){try{const r=this.getDraftAssessments(),n=`${t}_${s}`;return r[n]||null}catch(r){return console.error("Error getting draft assessment:",r),null}}deleteDraftAssessment(t,s){try{const r=this.getDraftAssessments(),n=`${t}_${s}`;delete r[n],localStorage.setItem(m.DRAFT_ASSESSMENTS,JSON.stringify(r))}catch(r){console.error("Error deleting draft assessment:",r)}}getDraftAssessments(){try{const t=localStorage.getItem(m.DRAFT_ASSESSMENTS);return t?JSON.parse(t):{}}catch(t){return console.error("Error parsing draft assessments:",t),{}}}saveDraftVisitNote(t,s,r,n,i=!1){try{const o=this.getDraftVisitNotes(),a=`${t}_${s}_${r}`,l={id:a,patientId:t,visitDate:s,role:r,formData:n,lastSaved:new Date,isComplete:i,timestamp:Date.now()};o[a]=l,localStorage.setItem(m.DRAFT_VISIT_NOTES,JSON.stringify(o)),console.log(`💾 Saved draft visit note for ${t} - ${r}`,{isComplete:i})}catch(o){console.error("Error saving draft visit note:",o)}}getDraftVisitNote(t,s,r){try{const n=this.getDraftVisitNotes(),i=`${t}_${s}_${r}`;return n[i]||null}catch(n){return console.error("Error getting draft visit note:",n),null}}deleteDraftVisitNote(t,s,r){try{const n=this.getDraftVisitNotes(),i=`${t}_${s}_${r}`;delete n[i],localStorage.setItem(m.DRAFT_VISIT_NOTES,JSON.stringify(n))}catch(n){console.error("Error deleting draft visit note:",n)}}getDraftVisitNotes(){try{const t=localStorage.getItem(m.DRAFT_VISIT_NOTES);return t?JSON.parse(t):{}}catch(t){return console.error("Error parsing draft visit notes:",t),{}}}getAllDraftsForPatient(t){const s=Object.values(this.getDraftAssessments()).filter(n=>n.patientId===t),r=Object.values(this.getDraftVisitNotes()).filter(n=>n.patientId===t);return{assessments:s,visitNotes:r}}getDraftCount(){return{assessments:Object.keys(this.getDraftAssessments()).length,visitNotes:Object.keys(this.getDraftVisitNotes()).length}}cleanupOldDrafts(t=10080*60*1e3){try{const s=Date.now()-t,r=this.getDraftAssessments();Object.keys(r).forEach(i=>{r[i].timestamp<s&&delete r[i]}),localStorage.setItem(m.DRAFT_ASSESSMENTS,JSON.stringify(r));const n=this.getDraftVisitNotes();Object.keys(n).forEach(i=>{n[i].timestamp<s&&delete n[i]}),localStorage.setItem(m.DRAFT_VISIT_NOTES,JSON.stringify(n)),console.log("🧹 Cleaned up old drafts")}catch(s){console.error("Error cleaning up old drafts:",s)}}getAutoSaveEnabled(){try{const t=localStorage.getItem(m.AUTO_SAVE_ENABLED);return t?JSON.parse(t):!0}catch{return!0}}setAutoSaveEnabled(t){this.autoSaveEnabled=t,localStorage.setItem(m.AUTO_SAVE_ENABLED,JSON.stringify(t))}exportDrafts(){return JSON.stringify({assessments:this.getDraftAssessments(),visitNotes:this.getDraftVisitNotes(),timestamp:Date.now()})}importDrafts(t){try{const s=JSON.parse(t);return s.assessments&&localStorage.setItem(m.DRAFT_ASSESSMENTS,JSON.stringify(s.assessments)),s.visitNotes&&localStorage.setItem(m.DRAFT_VISIT_NOTES,JSON.stringify(s.visitNotes)),!0}catch(s){return console.error("Error importing drafts:",s),!1}}clearAllDrafts(){localStorage.removeItem(m.DRAFT_ASSESSMENTS),localStorage.removeItem(m.DRAFT_VISIT_NOTES),console.log("🗑️ Cleared all drafts")}}const Q=()=>{const e=A.getInstance();return{saveDraftAssessment:e.saveDraftAssessment.bind(e),getDraftAssessment:e.getDraftAssessment.bind(e),deleteDraftAssessment:e.deleteDraftAssessment.bind(e),saveDraftVisitNote:e.saveDraftVisitNote.bind(e),getDraftVisitNote:e.getDraftVisitNote.bind(e),deleteDraftVisitNote:e.deleteDraftVisitNote.bind(e),getAllDraftsForPatient:e.getAllDraftsForPatient.bind(e),getDraftCount:e.getDraftCount.bind(e),cleanupOldDrafts:e.cleanupOldDrafts.bind(e),getAutoSaveEnabled:e.getAutoSaveEnabled.bind(e),setAutoSaveEnabled:e.setAutoSaveEnabled.bind(e),exportDrafts:e.exportDrafts.bind(e),importDrafts:e.importDrafts.bind(e),clearAllDrafts:e.clearAllDrafts.bind(e)}},z={isOnline:()=>navigator.onLine,addOnlineListener:e=>(window.addEventListener("online",e),()=>window.removeEventListener("online",e)),addOfflineListener:e=>(window.addEventListener("offline",e),()=>window.removeEventListener("offline",e))},v={checkLazyLoading:()=>"IntersectionObserver"in window,checkWebP:()=>{const e=document.createElement("canvas");return e.width=1,e.height=1,e.toDataURL("image/webp").startsWith("data:image/webp")},checkServiceWorker:()=>"serviceWorker"in navigator},Z=e=>{const t=performance.now();return()=>{const r=performance.now()-t;return console.log(`⚡ ${e}: ${r.toFixed(2)}ms`),r>1e3&&console.warn(`🐌 Slow operation detected: ${e} took ${r.toFixed(2)}ms`),r}},B=()=>{["/logo.png","/homecare_db_bundle_ar.v3.json"].forEach(t=>{const s=document.createElement("link");s.rel="preload",s.href=t,s.as=t.endsWith(".json")?"fetch":"image",document.head.appendChild(s)})},ee=()=>{console.log("🚀 Initializing performance optimizations..."),B(),console.log("📊 Browser capabilities:",{lazyLoading:v.checkLazyLoading(),webP:v.checkWebP(),serviceWorker:v.checkServiceWorker(),online:z.isOnline()})};export{X as H,h as R,Q as a,J as g,ee as i,Z as m,Y as r,q as u};
